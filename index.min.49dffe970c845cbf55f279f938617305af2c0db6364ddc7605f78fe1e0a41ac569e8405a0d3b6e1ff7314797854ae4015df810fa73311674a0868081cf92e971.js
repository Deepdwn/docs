var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput'),changeloginput=document.getElementById('changeloginput'),activeSearch=userinput||changeloginput;document.addEventListener('keydown',inputFocus);function debounce(b,c){var a;return function(){clearTimeout(a),a=setTimeout(b.bind(this,arguments),c)}}function inputFocus(a){a.keyCode===191&&(a.preventDefault(),activeSearch.focus()),a.keyCode===27&&(activeSearch.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var b=new FlexSearch({cache:!0,doc:{id:'id',field:['title','description','content'],store:['href','title','description']}}),c=[{id:0,href:"https://support.deepdwn.com/docs/guide/getting-started/",title:"Getting Started",description:"Beginning with Deepdwn",content:"First steps The first time you open Deepdwn, you\u0026rsquo;ll be prompted to select a folder which will contain your markdown notes and documents.\nDeepdwn will read the markdown files in this folder, and all nested folders, and populate your available tags and categories, and allow you to find documents by searching.\nFor performance and organization, it\u0026rsquo;s best to choose a dedicated notes directory of some kind for this, rather than your entire home directory or the root of your hard drive, since Deepdwn needs to find and read all of the markdown files inside.\nThe interface Deepdwn\u0026rsquo;s interface is split into four panels. These panels can be resized by grabbing the separator between them, or collapsed and expanded by double clicking the label at the top.\nFilters panel  The first panel, Filters, shows your tags, categories and folders. You can select these to filter the file list (the next panel), and deselect them to see all files again.\nYou can also double click the section headings sections to collapse them.\nThe Drafts filter at the top is always available. Here you\u0026rsquo;ll find files which have not yet been saved for the first time.\nFiles panel  The second panel, Files, displays a list of files based on your currently selected filters, or all files if no filters have been selected.\nRight clicking these files will display additional options, allowing you to delete files, show their location in your file system, pin them to the top of the list, or duplicate them as needed.\nThe top of this panel has a search field which will further filter the displayed files as you type. Filenames, and all file content will be considered when searching.\nOutline panel  The third panel, Outline, shows all the headings in your current file. Clicking a heading will take you that section of your document.\nEditor panel  This is is the main panel in Deepdwn, where you edit your files.\nOrganizing your files You can tell Deepdwn about your files and how you organize them by editing the files themselves. Deepdwn supports a format known as YAML frontmatter, which appears at the very top of your documents, and looks like this:\n---title:My Favorite Cakescategory:Blogtags:- favorites- 🧁 baking- musingspinned:truedir:ltr---# Welcome to my cake postThis document has the title My Favorite Cakes, is in the category Blog and has three tags, favorites, 🧁 baking, and musings. You can add as few or as many tags as you\u0026rsquo;d like. The document direction is set to left-to-right, and the document is \u0026ldquo;pinned\u0026rdquo; so that it always appears at the top of the file list.\nThese fields (title, category, tags, and dir) are the only ones that Deepdwn uses currently, but you can add any other fields you need as well. Many other systems support markdown with the same frontmatter, so you can add what you need to support those systems.\nOnce a file has been saved, its category and tags will be added to the filters panel, and the title (if present) will replace the Untitled name in the file list. If no title has been added, the filename will be used instead.\nWorking with markdown  Markdown\u0026rsquo;s formatting is intended to be readable as-is without any coversion. Deepdwn enhances (but does not hide) this formatting by applying bold, italic, and a wide range of other formatting as you type.\nPress the question mark icon in the toolbar to open a reference document with all of Deepdwn\u0026rsquo;s supported markdown formatting.\nRendering your markdown To view your document without seeing markdown syntax and to render charts and music, you can press the preview button in the toolbar to open a new window with your fully rendered document.\nThe preview will be updated as you add to and edit your document, and can be exported to PDF or HTML from the save icon in the corner.\nOptions  Deepdwn supports some alternate display and behavior options. These can be changed from the preferences view, available by pressing the Preferences gear in the lower left hand corner of the application, or with the keystroke  Ctrl , .\nShortcut keys Keystrokes for common actions Shortcuts →\n"},{id:1,href:"https://support.deepdwn.com/docs/guide/shortcuts/",title:"Shortcuts",description:"Application shortcut list",content:"Application shortcuts    Shortcut Description      Ctrl .  Open preferences    Ctrl N  New file    Ctrl Shift 1  New file from first template    Ctrl S  Save file    Ctrl Shft S  Save file as    Ctrl Q  Quit    Ctrl Shift =  Zoom in    Ctrl -  Zoom out    Ctrl 0  Reset zoom    Ctrl Mousewheel  Zoom    F11  Fullscreen mode    Shift F11  Distraction free mode    Alt  Show menu temporarily when Hide Menu Bar is enabled. (Win/Linux)     Keyboard navigation    Shortcut Description      Ctrl M  Toggle between Tab key changing focus vs adding indentation    Ctrl Shift M  Move focus to editor panel    F6  Move focus to next application panel    Shift F6  Move focus to previous application panel     Editor shortcuts (default)    Shortcut Description      Ctrl ]  Indent the current line    Ctrl [  Deindent the current line    Ctrl L  Select the current line    Ctrl Shift L  Convert the current multiline selection to multiple selections, with their own cursors    Escape  If you have multiple selections, drop all except the first one    Ctrl Enter  Insert a line after the current line, and jump to that line    Ctrl Shift Enter  Insert a line before the current line, and jump to that line    Ctrl D  With text selected, also select the next occurrence of that text    Ctrl F3  With text selected, find next occurrence of that text    Ctrl Shift F3  With text selected, find previous occurrence of that text    Ctrl Shift M  Selects text between brackets, or select all. Applies to code in code blocks.    Ctrl Shift Space  Selects text between brackets (as above), or selects all if no appropriate brackets    Ctrl Shift Up/Down  Swap the current line with the one above or below it    Ctrl J  Combine selected lines into one line (unwraps lines)    Ctrl Shift D  Duplicate the current line    F9  Sort the selected lines    Ctrl F9  Sort the selected lines (case-insensitive)    Shift F9  Reverse sort the selected lines    Shift Ctrl F9  Reverse sort the selected lines (case-insensitive)    Ctrl Shift K  Delete the current line    Ctrl-K Ctrl-K  Delete to the end of the line    Ctrl-K Ctrl-Backspace  Delete to the beginning of the line    Ctrl-K Ctrl-U  Make current word uppercase    Ctrl-K Ctrl-L  Make current word downcase    Ctrl-K Ctrl-C  Scroll current line to center of editor    Ctrl F  Find text    Ctrl H  Replace text    Ctrl Space  Autocomplete (links to markdown files or images)    Ctrl Space  Toggle the checkbox on the current line    Ctrl Shift E  Fix markdown in the current file     Folding    Shortcut Description      Ctrl Shift [  Fold the current section    Ctrl Shift ]  Unfold the current section    Ctrl Shift \\  Toggle folding of current section    Ctrl-K Ctrl-1  Fold all sections    Ctrl-K Ctrl-2  Fold level 2    Ctrl-K Ctrl-3  Fold level 3    Ctrl-K Ctrl-4  Fold level 4    Ctrl-K Ctrl-5  Fold level 5    Ctrl-K Ctrl-6  Fold level 6    Ctrl-K Ctrl-0  Unfold all sections    Ctrl-K Ctrl-J  Unfold all sections     Tables    Shortcut Description      Alt Shift Left  Delete column    Alt Shift Right  Add column    Alt Shift Up  Delete row    Alt Shift Down  Add row    Alt Left  Move column left    Alt Right  Move column right    Alt Up  Move row up    Alt Down  Move row down    Ctrl Shift A  Reformat table    F5  Sort by current column, ascending (mac)    Shift F5  Sort by current column, descending (mac)    F9  Sort by current column, ascending (win/linux)    Shift F9  Sort by current column, descending (win/linux)    "},{id:2,href:"https://support.deepdwn.com/docs/guide/shortcuts/emacs/",title:"Emacs",description:"Shortcuts for Emacs mode",content:"General    Shortcut Description      Ctrl-x Ctrl-w  Save    Ctrl-x f  New file    Ctrl-x h  Select all    Ctrl-x h  Select all     Movement    Shortcut Description      Ctrl f/b  Move forward/backward by one character    Alt f/b  Move forward/backward by one word    Ctrl p/n  Move up/down one line    Ctrl a/e  Move to start/end of line    Alt a/e  Move forward/backward by one sentence    Ctrl Up  Move up by one paragraph    Ctrl Down  Move down by one paragraph    Alt v  Move up by one page    Ctrl v  Move down by one page    Alt Shift ,  Move to start of document    Alt Shift .  Move to end of document    Alt g g  Go to line     Editing    Shortcut Description      Ctrl-x Tab  Insert tab    Ctrl d  Delete next character    Ctrl h  Delete previous character    Alt d  Delete next word    Alt backspace  Delete previous word    Alt k  Delete to end of sentence    Ctrl-x Del  Delete to end of sentence    Ctrl o  Insert new line    Ctrl t  Transpose two characters    Alt c  Capitalize next word    Alt l  Lowercase start of next word    Ctrl /  Undo    Ctrl-x u  Undo    Ctrl Shift -  Undo    Ctrl z  Undo    Ctrl Shift z  Redo     Folding    Shortcut Description      Ctrl-x Ctrl-h  Fold current section    Ctrl-x Ctrl-e  Toggle current section fold    Ctrl-x Ctrl-t  Fold all sections    Ctrl-x Ctrl-a  Unfold all sections    Ctrl-X Ctrl-1  Fold all sections    Ctrl-X Ctrl-2  Fold level 2    Ctrl-X Ctrl-3  Fold level 3    Ctrl-X Ctrl-4  Fold level 4    Ctrl-X Ctrl-5  Fold level 5    Ctrl-X Ctrl-6  Fold level 6     Tables    Shortcut Description      Alt Shift Left  Delete column    Alt Shift Right  Add column    Alt Shift Up  Delete row    Alt Shift Down  Add row    Alt Left  Move column left    Alt Right  Move column right    Alt Up  Move row up    Alt Down  Move row down    Ctrl-X Ctrl-C  Reformat table    Ctrl Alt 6  Sort by current column, ascending    Ctrl Shift Alt 6  Sort by current column, descending    "},{id:3,href:"https://support.deepdwn.com/docs/guide/shortcuts/vim/",title:"Vim",description:"Shortcuts for Vim mode",content:"This is not a complete list\nMode changing    Shortcut Description      Escape  Enter command mode    i  Enter insert mode before cursor    I  Enter insert mode at the beginning of the line    a  Enter insert mode after the cursor    A  Enter insert mode at the end of the line    o  Enter insert mode after the current line    O  Enter insert mode before the current line    :  Last line mode (prompt)    Ctrl c  Exit insert mode and abort current command    v  Enter visual mode    V  Enter visual line mode    Ctrl v  Enter visual block mode    s  Delete character and enter insert mode    S  Delete line and enter insert mode    R  Enter replace mode     Cursor movement    Shortcut Description      h/j/k/l  Move cursor left/down/up/right    0  Move cursor to beginning of line    $  Move cursor to end of line    ^  Move cursor to first non-empty character of line    w  Move cursor forward one word    W  Move cursor forward one word, based on whitespace    6 w  Move cursor forward 6 words    b  Move cursor backward one word    B  Move cursor backward one word, based on whitespace    6 b  Move cursor backward 6 words    e  Move cursor to end of word    ge  Move cursor backward one word, to end of word    6 e  Move cursor forward 6 words, to end of word    f c  Move cursor forward to next character c    F c  Move cursor backward to previous character c    t c  Move cursor to before next character c    T c  Move cursor to after previous character c    ;  Repeat previous t or f movement, forward    ,  Repeat previous t or f movement, backward    Ctrl b/f  Move cursor one page up/down    Ctrl u/d  Move cursor half a page up/down    H  Move cursor to top of visible screen    M  Move cursor to middle of visible screen    L  Move cursor to bottom of visible screen    gg  Move cursor to beginning of document    G  Move cursor to end of document    16 G  Move cursor to line 16    zt  Scroll current line to top of screen    zz  Scroll current line to center of screen    zb  Scroll current line to bottom of screen    Ctrl e  Scroll screen down one line    Ctrl y  Scroll screen up one line    (  Move cursor to next sentence    (  Move cursor to previous sentence    }  Move cursor to next paragraph    {  Move cursor to previous paragraph    Ctrl o  Move cursor to back (in location history)    Ctrl i  Move cursor to forward (in location history)     Editing    Shortcut Description      x  Delete character    r  Replace character    dd  Cut line    yy  Yank line    p  Paste    P  Paste before    u  Undo    Ctrl r  Redo    ~  Toggle case    gU  Uppercase    gu  Lowercase    gUU  Uppercase current line    guu  Lowercase current line      Indent      Unindent    d/x  Delete selection    s  Replace selection    y  Yank selection    zc  Fold current section    zo  Unfold current section    za  Toggle current section folding    zC  Fold all sections    zO  Unfold all sections     Macros    Shortcut Description      q c  Record macro named c    q  (While recording) stop recording    @ c  Execute macro named c    @ 6 c  Execute macro named c 6 times    @@  Execute macro again     Tables    Shortcut Description      \\tt  Generate table from header    \\tr  Reformat table    \\tdd  Delete row    \\tdc  Delete column    \\tic  Insert column (after)    \\tiC  Insert column (before)    \\ts  Sort table     Other table commands:\n   Command Description     Tableize Generate table from header   TableModeRealign Reformat table   TableSort Sort by current column (ascending)   TableSort! Sort by current column (descending)     "},{id:4,href:"https://support.deepdwn.com/docs/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:"Will Deepdwn support my cloud storage service? There are no plans to integrate Deepdwn with any synchronization services.\nHowever, Deepdwn is designed to work with any services you already have set up. Just sync your notes directory like you would any other.\nWill Deepdwn add a WYSIWYG mode? I\u0026rsquo;d like to have this option eventually, but it\u0026rsquo;s a huge feature and it\u0026rsquo;s unlikely to be added any time soon.\nWhere can I get support? Support on Itch.io\nWhere can I add feature requests? Request forum on Itch.io\n"},{id:5,href:"https://support.deepdwn.com/docs/help/",title:"Help",description:"Help docs",content:""},{id:6,href:"https://support.deepdwn.com/docs/guide/",title:"Guide",description:null,content:""},{id:7,href:"https://support.deepdwn.com/docs/",title:"Docs",description:"Docs Doks.",content:""}],e=[{id:"changelog-0",href:"https://support.deepdwn.com/changelog/version-0-36-1/",title:"Version 0.36.1",description:"Outline and table improvements",content:"This version adds some fixes and improvements for table rendering and outline scrolling.\nAs an aside, further large-scale changes are being made to Deepdwn behind the scenes currently, but they won\u0026rsquo;t be in a releasable state for a while yet.\nTables  Tables are now rendered with vertical lines between columns in the preview Very wide tables can now be scrolled left and right in the preview window and in styled HTML exports Very wide tables will be scaled down to fit the page in PDF exports  Bugfixes  Fixed clicking a heading in the outline panel sometimes highlighting the wrong heading afterward, even though the heading would be scrolled to correctly.  "},{id:"changelog-1",href:"https://support.deepdwn.com/changelog/version-0-36-0/",title:"Version 0.36.0",description:"Better HTML paste and synced scrolling",content:"This version adds improvements to a couple of existing features: HTML-to-markdown and synchronized scrolling!\nHTML Pasting Significant changes have been made to the convert-pasted-HTML-to-markdown feature to support additional elements, and reduce unnecessary escaping.\n Support \u0026lt;var\u0026gt; elements, imported as italic Support definition lists, imported using compact syntax Use different escaping mechanisms for code blocks imported from \u0026lt;pre\u0026gt; tags Do not escape HTML in inline code imported from \u0026lt;code\u0026gt; tags When inline code contains a backtick character, use double backticks for the code element Minimize HTML escaping on paste, and specifically unescape some items if escaped in source Ignore inline styles inside of code blocks and inline code  Further changes to this feature are planned, especially to escape markdown in pasted content, but other work will be needed first to make this possible.\nPreview synchronized scrolling First, an annoying bug that caused the preview window to rapidly jiggle while typing has been fixed, as have some related issues around repeated scroll events.\nSecondly, synchronized scrolling will now try to be a bit smarter about where to scroll while you\u0026rsquo;re actually editing.\nWithout going into too much detail, the preview window used to try to keep the top of the preview window and the top of the editor in sync. This worked well when scrolling, but could cause the line you\u0026rsquo;re actually editing to appear offscreen in the preview, depending on a number of factors.\nNow, scrolling in the editor will try to keep the active line synchronized in the preview if it\u0026rsquo;s visible, whether it\u0026rsquo;s at the top of the visible page or the bottom.\nThe effect of this is pretty subtle, but I think it\u0026rsquo;s a good change. That said, I\u0026rsquo;m considering it experimental, so please provide feedback in Deepdwn\u0026rsquo;s support forum.\nBug fixes  Fix typo in example document  "},{id:"changelog-2",href:"https://support.deepdwn.com/changelog/version-0-35-0/",title:"Version 0.35.0",description:"Discord integration and tag autocomplete",content:"Discord status Deepdwn can now update your status in Discord when you have the Discord application running (if you like).\nThis integration is disabled by default. To enable it, go to the new Preferences \u0026gt; Integrations section, and enable \u0026ldquo;Show Deepdwn activity in Discord\u0026rdquo;.\n Here, you can also enable \u0026ldquo;Show current activity\u0026rdquo;, which will display whether you\u0026rsquo;re actively writing (with a long cooldown) or idle.\nYou can also enable \u0026ldquo;Show current file\u0026rdquo;, disabled by default, which will also display the title or filename of your active document.\nFinally, in Discord you\u0026rsquo;ll need to enable \u0026ldquo;Display current activity as a status message\u0026rdquo; in Settings \u0026gt; Activity Status.\nIn the future, I\u0026rsquo;m planning to add some additional information like session word count, but that will likely wait until some prerequisite work has been completed.\nTag and category autocomplete You can now use autocomplete to enter your tags and categories when editing metadata!\n Begin typing your tag or category and press  Ctrl Space  to see a list of matching items.\nBug fixes  Fix file system listening not being correctly initialized on startup in some cases Fix automatic lint fixing not using correct lint configuration Fix badly formatted yaml causing unexpected tags to appear in the library panel sometimes Better handling of non-string types in titles in frontmatter Fix title disappearing in file list when file had yaml metadata, but no title Fix new drafts not showing up immediately when drafts filter was already selected Fix initial empty file not appearing in file list when edited  "},{id:"changelog-3",href:"https://support.deepdwn.com/changelog/version-0-34-0/",title:"Version 0.34.0",description:"Accessibility updates",content:"New accessibility preferences A new section has been added to Deepdwn\u0026rsquo;s preferences for accessibility settings. The existing settings for the tab key behavior (toggling between indenting and navigation), and high-contrast display, have both been moved here.\nTwo new options have been added here as well:\n Display entire document at once: By default, Deepdwn hides offscreen content for performance reasons in a way that may interfere with screen readers, in some cases. With this setting enabled, the entire document will be rendered at once which may improve support, at the cost of rendering performance. Align heading text: This setting enables or disables outdented headings. Headings are normally positioned in a way that may interfere with some screen readers, so this setting has been added to improve compatibility if needed.  Additionally, skip links have been added to the filters, file and outline panels to bypass your growing list of filters and files when navigating with the  Tab  key. You may still use  F6  to jump directly from panel to panel.\nLastly, a long standing issue where NVDA could skip reading some content in your documents in browse mode has been fixed. If you\u0026rsquo;ve run into this issue in the past, this is a great release to give Deepdwn another try.\nIf you have suggestions to improve Deepdwn\u0026rsquo;s accessibility, please let me know in the feature request community forum, or on twitter (@DeepdwnApp).\nTweaks  The file list panel will now be automatically scrolled to the active file. This is mostly useful/noticeable when you reopen Deepdwn and a document is already active from your previous session.  Bugfixes  Fixed screen readers announcing files were in a file conflict state, when they were not. Fixed a focusing/rendering issue that could result in NVDA skipping content.  "},{id:"changelog-4",href:"https://support.deepdwn.com/changelog/version-0-33-2/",title:"Version 0.33.2",description:"Additional error logging, bugfixes",content:"Just another quick bugfix and error logging release, while larger updates are being worked on.\nTweaks Additional capturing of otherwise uncaptured errors.\nBug fixes  Fix error that could occur while parsing document titles.  "},{id:"changelog-5",href:"https://support.deepdwn.com/changelog/version-0-33-1/",title:"Version 0.33.1",description:"Minor find improvements",content:"Just a small patch release right now\nTweaks  Improved responsiveness of find-in-document Removed extra spacing around highlighted search results Added error logging for unexpected application errors. These are located at:  Windows: %appdata%/Deepdwn/logs Mac: ~/Library/Application Support/Deepdwn/logs Linux: ~/.config/Deepdwn/logs    "},{id:"changelog-6",href:"https://support.deepdwn.com/changelog/version-0-33-0/",title:"Version 0.33.0",description:"Automatic formatting fixes",content:"Deepdwn\u0026rsquo;s previous feature update added markdown format checks, and with this update it can fix many of them automatically!\nFix markdown formatting errors  When Deepdwn knows how to fix a formatting issue, you can click the format warning icon to show a menu of available fixes.\nYou can also fix all document errors at once with from the \u0026ldquo;Fix all formatting errors\u0026rdquo; item in the Tools menu. You can even apply fixes to your files automatically on save with \u0026ldquo;Fix formatting issues on save\u0026rdquo; setting in Preferences \u0026gt; Advanced.\nTweaks  Slightly higher contrast for markdown lint underlines Save whether sections (tags/categories/folders) are expanded or collapsed, and restore their state at launch  Bug fixes  Fix missing/incorrect formatting error underline locations in some cases Fix similar errors on the same line not being highlighted. Identical errors may still not be Fix autosave not autosaving correctly Fix cursor position being weird when inserted between a heading\u0026rsquo;s prefix and its text Fix border color of template selection popup in high contrast mode Fix heading alignment when selecting text in right-to-left documents Fix removing a folder leaving some files behind visually Fixed top level folders not being collapsed at launch if they were collapsed previously  "},{id:"changelog-7",href:"https://support.deepdwn.com/changelog/version-0-32-1/",title:"Version 0.32.1",description:"Missing drafts bugfix",content:"Quick bugfix release for drafts not appearing in the files panel.\nTweaks  Minimum window dimension has been increased to a more realistic size. Still small though.  Bug fixes  Fixed draft files not appearing when selecting drafts in the filters panel  "},{id:"changelog-8",href:"https://support.deepdwn.com/changelog/version-0-32-0/",title:"Version 0.32.0",description:"Markdown linting",content:"Most of this release was focused on small performance changes, but there\u0026rsquo;s one new feature for you!\nMarkdown format checking  Deepdwn can now check your documents for formatting consistency and errors with MarkdownLint.\nDeepdwn can warn you if:\n Your headings end with punctuation You reversed the parentheses and brackets in your links Your numbered lists are out of order You have trailing spaces after your text  And a ton of other things. You can find a full settings reference here: https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md\nThe default settings are fairly relaxed, but you can make them as strict or as loose as you need, and many rules have additional customization options so that you can fine-tune to your liking.\nAll of these are configurable in Preferences -\u0026gt; Advanced -\u0026gt; Enable markdown format warnings. There\u0026rsquo;s a simple configuration setting in JSON format currently, but that may be changed in a future release.\nDeepdwn has a couple of custom rules, based on the default markdownlint rules:\n no-trailing-punctuation-folding, which is identical to no-trailing-punctuation but accepts an option to ignore folding indicators, \u0026ldquo;\u0026hellip;\u0026rdquo;, at the end of headings, instead of treating them like normal punctuation. ol-prefix-order which is identical to ol-prefix but allows ordered lists to start with any number when using the ordered or ordered_or_one styles.  I\u0026rsquo;m hoping to add an interface to let you fix many of these in one click in a future update.\nTweaks  Load the last active file earlier in the startup process to reduce the time until file is visible. Most significant for large file collections. Reduce work done while parsing tags and categories while typing. Reduced background work when selecting tags and resizing window panels. Reduced foreground work while processing links to headings between files Reduced config file writing for some repeated operations Move markdown linting to a background process to reduce impact while editing Mac users now use the  Command  key, rather than  Ctrl , to select multiple tags in the tag list. In the preview, abbreviation text decoration (a dotted underline) has a little more visual space Minor formatting changes for the example document Change lint error and warning icons (previously only visible for errors in document yaml metadata) Lint warning popups now use bold text for the first line IDs for headings are now generated before applying typographic changes (ex: changing single quotes to curly quotes), resulting in simpler and more predictable heading links. Unfortunately, this may mean that you need to regenerate some links to headings in your existing documents if they were affected. Sorry about that!  Bug fixes  Fixed deselected tags becoming reselected after exiting and relaunching Deepdwn. Block quotes in light mode now have a different font color. This was already the case in dark mode With big headings enabled, the space between headings and heading prefixes, ###, are more consistent and constrained Lint popups in high-contrast mode now use a thicker border, more consistent with the rest of the mode Fixed autocompleting links to headings sometimes showing HTML in plain text, depending on heading formatting Fixed being unable to use link autocomplete from unsaved documents. Headings from the current file are now supported  "},{id:"changelog-9",href:"https://support.deepdwn.com/changelog/version-0-31-0/",title:"Version 0.31.0",description:"Convert rich text to markdown",content:"Paste rich text to markdown  When you paste HTML content into Deepdwn (copied from a webpage or online document editing tool), Deepdwn will now do its very best to convert it into markdown. This can be a huge time saver when importing formatted content and tables especially.\n As a side effect, Deepdwn now supports copy/pasting spreadsheet data directly from Google Sheets, LibreOffice, and Office 365. Others may or may not work!\nIf you want to skip this formatting, use the \u0026ldquo;Paste as Plain Text\u0026rdquo; menu item (  Ctrl-Shift-V ), or \u0026ldquo;Paste and Match Style\u0026rdquo; for Mac users, (  Command-Option-Shift-V ).\nQuick toggle for checklists  In checklists, you can now quickly toggle the checkbox for the current line with the keystroke  Ctrl-Space . This shortcut may change in the future.\nTemplate filters Files with the tag template will no longer appear in other tags and categories when filtering. They\u0026rsquo;ll still be visible when the template tag filter has been selected, or when no filters are selected.\nA small icon has been added to the file list to help distinguish them from normal files.\nTweaks  When switching between documents, Deepdwn will do a better job maintaining your undo history and scroll position. If you run into issues, especially when changing documents, please let me know! Added basic syntax highlighting for block (not inline) LaTeX, using both code backticks and the $$ delimiters. For draft documents, \u0026ldquo;Save As\u0026rdquo; and \u0026ldquo;Save\u0026rdquo; will now do the same thing: just save the file. Previously, Save As would create a new file while retaining the unsaved file as well, which was confusing. Slight display change to word count statistics charts (rounded corners). Autosave is now enabled by default for new users  Bug fixes  Fix ordered list marker appearing too large when ordered list is nested in an unordered list Fixed pasting URLs being allowed to create links within links Fixed weird border at the corner of block code elements in the editor Removed unintended shortcut that reloaded the Deepdwn interface Fixed flash of bold/italic when using Ctrl+B/I shortcuts Fixed pasting a URL over selected text being allowed to create links within links LaTeX dollar sign delimiters (in editor window only):  Fix delimiters not terminating when multiple instances occur on the same line Fix inline LaTeX being treated as valid when first and/or last enclosed character is a space Fix markdown elements being parsed/highlighted within inline and block LaTeX    "},{id:"changelog-10",href:"https://support.deepdwn.com/changelog/version-0-30-0/",title:"Version 0.30.0",description:"Multiple tag filtering, link pasting",content:"I\u0026rsquo;ve got a handful of features, changes and bugfixes for you with 0.30!\nMultiple tag selection  You can now select multiple tags in the filters panel by holding control while clicking them, to further filter your files.\nWhen multiple tags are selected, only files containing all of the selected tags will be visible in the file list.\nWhile you can still only select one category or folder at a time (since a file can only be in a single category or folder), you can now select a category and a folder and one or more tags at the same time to locate files which match all of those criteria.\nFont size selection In addition to whole-application zooming, you can now also adjust the font size in the editor and preview windows independently. This setting is located in the Fonts section of application preferences.\nPaste to link  When text is selected in the editor, pasting a URL will replace that text with markdown link tags.\nThis behavior is very simple, and it doesn\u0026rsquo;t look for surrounding markdown that might be incompatible with a linking, but this may be improved in a future update.\nLaTeX delimiters When writing your LaTeX math and chemistry expressions, you can now use single and double dollar sign characters ($ and $$) as delimiters instead of latex .... The original format is still supported. This improves data portability between Deepdwn and other markdown editors, where these delimiters are more common.\nThis change was originally announced in v0.29, but was missed during release.\nTweaks  Folders with names beginning with . will no longer appear in the folder list, and any markdown files beneath them (for whatever reason) will not be displayed. Removed border and background appearance from code blocks created by indentation in the editor. It\u0026rsquo;s not currently possible to make these look the way I\u0026rsquo;d like while maintaining commonmark behavior. Added a visual \u0026ldquo;tick\u0026rdquo; on slider inputs in preferences that displays the default value for the slider The keyboard shortcuts for creating new files from templates have been changed from  Ctrl-Numpad(number)  to  Ctrl-Shift-(number)  When a new folder is detected in the file system, it will now appear collapsed in the folder list instead of being initially expanded  Performance  Improve file list and folder list rendering performance when they contain large numbers of visible items Disabled some animations in the file list when it contains a large number of files, for performance reasons Performance improvements when adding or removing large numbers of files at once (ex: by renaming or duplicating a large folder)  Bug fixes  Fix last selected tag/category/folder not being selected again when closing and relaunching Deepdwn Fix partially-missing border around the active line in high-contrast mode, when active line is on a code block Fix incorrect (low-contrast) text selection color in the editor when in dark high-contrast mode Fix disabled slider input elements appearing to become activated when clicked Fix inconsistent spacing between heading prefixes and left margin when big headings setting is enabled Fix incorrect color in corner when vertical and horizontal scrollbars are visible together in some locations in both dark and high contrast modes Fix files still appearing in ancestor folders when they had been removed by deleting their parent directory in the file system  "},{id:"changelog-11",href:"https://support.deepdwn.com/changelog/version-0-29-0/",title:"Version 0.29.0",description:"Markdown templates",content:"Markdown templates Do you find yourself starting documents the same way over and over? Maybe you use the same set of categories or tags, maybe you always add the current date to your blog posts, or maybe you don\u0026rsquo;t like copying YAML every time.\nDeepdwn now supports markdown templates to save you a couple of steps.\n To create a new template, simply add the tag template to a document\u0026rsquo;s frontmatter, and it will appear in the New File From Template entry in the File menu, or select it from the new drop down next to the New File button in the top bar.\n If you star a template, it will be used as the default template for all new files. You can unstar it again return to the default new file behavior (starting an empty file).\n The shortcuts  Ctrl+Numpad\u0026lt;number\u0026gt;  can be used to create a document from your templates, or  Command+Numpad\u0026lt;number\u0026gt;  for Mac users.\nTime placeholder Templates currently support a single template field: {{ time }} which will be replaced with the current date in ISO8601 format (ex: 2021-09-19T19:57:55+05:00) by default when creating a new file.\nIf you need other date formats, Deepdwn has you covered there as well.\nUse {{ time:format }}, with any Luxon tokens, or Luxon preset name\nFor example\n {{ time:MMMM y }} will be replaced with the current month and year: September 2021 {{ time:DATE_SHORT }} with 9/19/2021  New diagram Deepdwn now supports Mermaid\u0026rsquo;s class diagrams, complete with syntax highlighting in the editor.\n Tweaks HTML Snippets\nWhen using raw HTML snippets in the editor, a newline within an HTML tag will now return the editor\u0026rsquo;s syntax coloring and behavior to markdown mode, which matches the (correct) behavior in the preview window.\nex:\n\u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;Label\u0026lt;/summary\u0026gt; This is treated as HTML * While this is treated as markdown \u0026lt;/details\u0026gt; Big Headings\nThe overall size of headings when big headings are enabled has been slightly reduced.\nTag and Category Sorting\nTags and categories are now sorted alphabetically instead of by file counts. I think this makes more sense anyway, since the most common tags are actually the least helpful for filtering. If the previous sorting is something you want (in the form of some kind of toggle), let me know.\nPreview Shortcut\nYou can now toggle the preview window open and closed with the key shortcut  Ctrl-Shift-P  (or  Command-Shift-P  for Mac users).\nBug fixes  Fixed inability to escape backticks and marked text using backslashes in the editor. The preview already behaved correctly. Fixed some cases where focus indicator and tooltips would appear when they shouldn\u0026rsquo;t. Fix timezones getting lost in YAML frontmatter time values when frontmatter was rewritten while pinning and unpinning documents. Fixed varous causes of file duplication in the file list when saving (especially when overwriting files, and when file monitoring is enabled). Minor improvements to initial statistics chart rendering time.  "},{id:"changelog-12",href:"https://support.deepdwn.com/changelog/version-0-28-1/",title:"Version 0.28.1",description:"Fixes for saving new files",content:"Quick bugfix release!\nBugfixes  Fixed timing issue that caused an error error on some systems when saving files for the first time.  "},{id:"changelog-13",href:"https://support.deepdwn.com/changelog/version-0-28-0/",title:"Version 0.28.0",description:"Display improvements, and more drag-and-drop",content:"This update contains a number of smaller display improvements and tweaks. Enjoy!\nDisplay updates  In a new feature I\u0026rsquo;m creatively calling \u0026ldquo;Big Headings\u0026rdquo;, Deepdwn can now display your markdown headings, uh, bigger.\nBecause this is much less compact, and may not be desirable for all users, it can be disabled in the Appearance section in preferences.\nThe appearance of inline code and code blocks have also been updated, and now more closely match their preview-rendered counterparts. Code blocks created by indenting text, rather than wrapping with backticks, will look slightly different, but I\u0026rsquo;m planning to improve that in the future.\nAlso, rendered songbooks are now more compact with regard to line spacing in the preview window.\nDrag and drop In addition to images, Deepdwn now supports drag-and-drop for other filetypes. These will be added as generic links in your document. Control-clicking them in the editor, or lef-clicking them in the preview, will load them with your system\u0026rsquo;s default application.\nActive file in window header (mac-only)  Deepdwn now supports a mac-only feature: file representations in window Titles. Mac users can now command-click the filename in the window heading to show a dropdown path to the current file.\nAdded abbreviations in markdown *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium The HTML specification is maintained by the W3C. Will be rendered this way:\nThe HTML specification is maintained by the W3C.\nBugfixes  Fix text selection color in dark mode being way too bright Fix a timing issue causing a duplicate files to appear in the file list, on some systems, when saving a file for the first time Fix overwriting a known file via Save As causing a duplicate file to appear in the file list When using non-monospaced font in the editor, center text markers (-\u0026gt; and \u0026lt;-) are now displayed with a monospaced font  Other stuff The itch.io page has been slightly updated as well to reflect new features that have been added since launching, remove some less important features, and update some images where the design has changed.\n"},{id:"changelog-14",href:"https://support.deepdwn.com/changelog/version-0-27-2/",title:"Version 0.27.2",description:"Bugfix for PDF exports",content:"Bug fixes  Fix PDF export only including first page of content for longer documents Fix PDF export missing images under some network conditions  "},{id:"changelog-15",href:"https://support.deepdwn.com/changelog/version-0-27-1/",title:"Version 0.27.1",description:"Bugfix for save comand",content:"Bug fixes  Fix save command failing when called from shortcut key or file menu. Autosave, Save As, and saving when the editor is focused were not affected Fix wrong color surrounding the close button in the check for updates dialog  "},{id:"changelog-16",href:"https://support.deepdwn.com/changelog/version-0-27-0/",title:"Version 0.27.0",description:"Word counting, oh .snap!",content:"Word count statistics Deepdwn can now track and display your word count over time in pretty charts by year, month and day. The global/file button switches between showing your word count updates for the current file, or all the files you\u0026rsquo;ve edited, combined.\nYear view  Month view  Day view  There are some other features I\u0026rsquo;d like to add to this in the future, like word count goals, and configuring for the time the day starts and ends\nTweaks  When cursor is within a bulleted or numbered list, pressing Tab will indent the current line, instead of inserting space at the cursor Added a .snap build for linux users Word counting now ignores your document\u0026rsquo;s YML frontmatter metadata (like document title, tags and category)  Bug fixes  Fix potential error when document changed from LTR direction to RTL Fix incorrect color for unsaved file icon in high-contrast mode Fix incorrect color for heading prefixes (ex: ###) in high-contrast mode Fix checkboxes in ordered lists in the editor not getting forced-monospace treatment Fix incorrect headings being highlighted in outline panel when scrolling or jumping to a section Fix wrong heading highlighted in outline when jumping to a heading that follows a folded section Fix clicking a heading in outline not causing the folded section to unfold Fix document jumping around when Deepdwn receives focus, after scrolling while unfocused Fix clicking checkboxes in preview not working as expected when a checklist also contains a checkbox item with incomplete markup Fix typo in example document Fix save failing sometimes after cancelling a save previously  "},{id:"changelog-17",href:"https://support.deepdwn.com/changelog/version-0-26-0/",title:"Version 0.26.0",description:"Table editing edition",content:"Live tables Verion 0.26 brings a shiny new table editor to Deepdwn!\n Tables are realigned automatically while editing. You can press tab (and shift tab) to jump between columns, or press enter to move to the next row.\nYou can find the shortcuts for adding, removing, sorting, and moving columns and rows here: Shortcuts. Most of these are also available when using vim or emacs shortcuts as well.\nAdding and removing columns In addition to the more explicit shortcuts above, new columns can be added by typing a pipe character ( | ) in an existing table cell.\nSimilarly, you can delete a pipe character if the column before that character is empty (not counting the header), and the entire column will be removed.\nTable alignment with CJK characters When Deepdwn adds spaces to pad out column widths, CJK (Chinese, Japanese and Korean) characters will be treated as exactly twice the width of latin characters.\nThere are some fonts, too large to include with Deepdwn, where latin characters are exactly half the width relative of CJK characters, such as Sarasa Mono. If you install one of these and use it as your editor font in Deepdwn, your tables will line up perfectly, even with a mix of CJK and non-CJK characters.\nSarasa Term UI shown:\n Table formatting styles Tables can either have pipe characters at the start and end of each line (\u0026ldquo;closed\u0026rdquo; tables), or they can be \u0026ldquo;open\u0026rdquo;, where each line does not start and end with a pipe.\nHere\u0026rsquo;s a closed table:\n| heading | heading | |---------|---------| | hello | hello | and an open table:\nheading | heading --------|-------- hello | hello Because of markdown formatting rules, open tables are slightly more compact, but aren\u0026rsquo;t quite as flexible. Closed tables are required if any cells in the first column are empty, for instance. Closed tables can also be a single column wide, where open tables must have at least two columns.\nYou can toggle between open and closed table formatting styles by adding (or removing) a pipe character at the very beginning of the table.\n No thank you There may be times when you don\u0026rsquo;t want to automatically reformat tables while editing them, perhaps because the alignment causes wrapping in your editor.\nYou can disable automatic table formatting in Preferences \u0026gt; Input. When table formatting is disabled, you may still use all of the table editing shortcut keys to edit and format tables.\nTypewriter mode This update also has a few (mostly) visual tweaks for typewriter mode\n Smoothly scroll to the active line position for initial scrolling, or if scrolling more than one line, but use immediate scrolling Allow centered typing, even for very short documents Visually represent the top of the document in typewriter mode  Tweaks  The statistics/backreference panel no longer opens when clicking the panel itself, and will open only when clicking the expand button. Replaced most in-app icons Add icons to filter panel section headings, small updates to visuals Changed display of file counts in filter panel Removed zebra striping from file panel Removed animation used when files are reordered from the file panel for the initial application load. Animation still used when pinning files and filtering.  Bug fixes  Fixed missing file synopsis in the file list panel when compact file view was disabled. Synopses no longer contain markdown formatting. Fixed several hover effects in high-contrast mode Fixed unexpected document scrolling when changing from one document to another in some cases Fixed unexpected document scrolling when returning to editor after scrolling while the editor or window was not focused Fixed slow animation of outline panel separator on app load and when changing theme.  "},{id:"changelog-18",href:"https://support.deepdwn.com/changelog/version-0-25-3/",title:"Version 0.25.3",description:"Spellcheck fixes",content:"Quick bugfix release for spell checking issues!\nBugfixes  Fixed spellcheck context menu offering no suggestions for misspelled words Fixed spellcheck failing to save changes when cursor wasn\u0026rsquo;t already on misspelled word.  "},{id:"changelog-19",href:"https://support.deepdwn.com/changelog/version-0-25-2/",title:"Version 0.25.2",description:"More folding improvements",content:"More improvements for markdown folding!\nTweaks  Added shortcuts for folding specific heading levels for sublime and emacs key bindings. Added toggle fold command for default key bindings Cursor can now move past fold markers without clearing them Prevent folding when no lines would be folded. Deleting a fold marker (via delete key) now unfolds the content instead of deleting whole region, similar to backspace key. Unfold and toggle fold commands now work when used on unfolded content that follows a fold marker, even if that content is technically on a different line.  Bugfixes  Fixed first heading not being foldable if it was also the first line in the document Fixed repeatedly folding the same line creating nested fold markers that hade to be cleared multiple times Fixed one cause of repeated fold markers appearing on the same line Fixed more than three periods at the end of a heading getting folded as well (folding is now limited to the last three periods). Fixed fold marker getting deleted prematurely when backspacing Fix deleting characters on lines after folds sometimes unfolding above lines Workaround (read: hack) for cursor not appearing next to fold markers. Still occurs in one case Fixed deleting a fold marker sometimes unfolding a nested marker as well  "},{id:"changelog-20",href:"https://support.deepdwn.com/changelog/version-0-25-1/",title:"Version 0.25.1",description:"Bugfix for code folding key shortcuts",content:"Quick bugfix update for some issues related to key shortcuts for markdown folding\nAlso added a couple of additional key shortcuts for folding\nBugfixes  Fixed sections unfolding immediately after edit Fixed section folding not persisting between document loads Fixed sections without any content not folding correctly  "},{id:"changelog-21",href:"https://support.deepdwn.com/changelog/version-0-25-0/",title:"Version 0.25.0",description:"Folding, pinning, file monitoring, scroll improvements",content:"Here\u0026rsquo;s another big update that I had planned to be a small update instead. I hope you like features!\nDocument folding Deepdwn now supports persistent document folding.\n With this change, you can collapse entire sections of your markdown documents based on heading level.\nAny heading ending in ... (three periods) is considered \u0026ldquo;folded\u0026rdquo; and will remain folded, even when the file is saved and reopened again later.\nTo unfold a heading you can:\n Move your cursor into the folded area with the arrow keys (or other navigation keys) Click the collapsed ... item Delete the ... item Use a shortcut key (below) to unfold all headings  There are new key shortcuts for this feature as well:\nSublime    Shortcut Description      Ctrl Shift [  Fold the current section    Ctrl-K Ctrl-1  Fold all sections    Ctrl-K Ctrl-0  Unfold all sections    Ctrl-K Ctrl-J  Unfold all sections     Emacs    Shortcut Description      Ctrl-x Ctrl-h  Fold current section    Ctrl-x Ctrl-t  Fold all sections    Ctrl-x Ctrl-a  Unfold all sections     Vim    Shortcut Description      zc  Fold current section    zC  Fold all sections    zO  Unfold all sections     These and all other key shortcuts can be found at https://support.deepdwn.com/docs/guide/shortcuts\nFile system updates Deepdwn now knows when files are changed.\nIf another application updates a file that Deepdwn knows about, the updated version will be immediately visible in Deepdwn. If files or folders have been added or removed, you\u0026rsquo;ll see them immediately in the application, without having to rescan your folders. As such, the rescan folders button has been removed when this feature is enabled.\n If you have unsaved changes to that file, you\u0026rsquo;ll be prompted to choose between keeping your changes, accepting the external changes, or saving a copy in order to keep both. If the file has instead been deleted by another application (and you have unsaved changes), the file will be moved to the Drafts filter with your unsaved changes.\nFile monitoring can be disabled, which will return the rescan folder button, from the new \u0026ldquo;Advanced\u0026rdquo; section in preferences.\nHere, you\u0026rsquo;ll also be able to use poll-based file monitoring. This method is less efficient, but may be necessary if your files are stored on a network drive where filesystem events aren\u0026rsquo;t available.\nSmooth synced scrolling Synchronized preview scrolling has been revamped, and is now much smoother. Previously, the preview window would jump immediately to top level elements as you scrolled past them in the editor. With this update, the scroll position will be interpolated between these elements as well. Anyway, it\u0026rsquo;s better now.\nOld  New  Document pinning  Documents can now be pinned the top of the file list panel. Pinned files ignore folder/category/tag filtering (but not search filtering) so that they\u0026rsquo;ll always be visible.\nYou can either pin files by right-clicking on the file and choosing \u0026lsquo;pin file\u0026rsquo; from the context menu, or you can add pinned: true to your document\u0026rsquo;s metadata.\ntitle:My favorite filepinned:trueHighlight headings when jumping When clicking headings in the outline view to jump to that position in the editor, the heading will now be highlighted for a moment in the editor.\nTweaks  Improve display of file search field when focused Animation changes for file reordering in file list (ex: when pinning documents) Three periods are required to form ellipses in the preview, rather than two Fixed deleted files remaining in parent and ancestor folders Fixed added files not appearing in ancestor folders Text centered with -\u0026gt; \u0026lt;- now uses paragraph tag instead of div in preview. Library and security updates  Bugfixes  Fix document title and metadata not being restored after reverting changes to a file Fix document content not being (immediately) restored after reverting changes to a file Disabled outdented headings in VIM mode. These are (unfortunately) broken outside of insertion mode. Fix incorrect heading label for screen readers in font preferences  "},{id:"changelog-22",href:"https://support.deepdwn.com/changelog/version-0-24-1/",title:"Version 0.24.1",description:"PDF image fixes",content:"Minor bug fix release only\nBug fixes  Fix missing local images in PDF exports  "},{id:"changelog-23",href:"https://support.deepdwn.com/changelog/version-0-24-0/",title:"Version 0.24.0",description:"Document linking/autocomplete, and HTML exports",content:"Update 0.24 is a feature-packed update that I\u0026rsquo;ve been looking forward to for a while.\nDocument linking First up, document linking! This is really a collection of features, so let\u0026rsquo;s dive in.\n Deepdwn now supports links from one document to another, both in the editor and preview window.\nThis is done using the standard markdown link format:\n[My Document](../my_document.md) Clicking this link in the preview window, or control-clicking the filename portion of the link in the editor, will both take you directly to the file. This currently works for documents that Deepdwn knows about (markdown files in the folders you have added).\nControl-clicking external http(s) links in the editor will open the URL in your default web browser, similar to clicking external links in the preview window (as of version 0.23).\nHeading links You can also link directly to a heading in a markdown document by adding an anchor ID.\n# My Heading  [link to my heading](../my_document.md#my-heading) These ID values are based on the heading content, by: replacing all runs of space characters with hyphens, converting it to lowercase, and URL-encoding the whole value.\nTo make linking to these IDs (much) easier, here comes another new feature.\nLink Autocomplete Deepdwn can now autocomplete links to both documents and their headings. Autocomplete is triggered with  Ctrl Space .\n Autocomplete will return documents beginning in the same directory as your current file, so your active file will need to be saved first. To link to other directories, you can begin your link with a relative path, like:\n[My Document](../ or\n[My Document](subdirectory/ You can also link directly to headings by using  Ctrl Space  after typing a # character in your link:\n[My Document](../my_document.md#help  Deepdwn\u0026rsquo;s autocomplete will then display a list of headings in that document, and will add the correct ID to your document link.\nBacklinks Document links also enable another feature: Backlinks!\nTo view a list of documents that have linked to your current document, you can expand the brand new file info panel at the bottom of the editor.\nCurrently, this only shows the number of characters/words/lines in your document, the creation and modification times, and backlinks, if any.\n Image preview In the editor, you can now see a preview of your images by holding the  Control  key while hovering over them.\nThis works for both local images (but only if they\u0026rsquo;re within one of your document directories), and remote web images.\n Exporting In addition to PDF, Deepdwn can now export your markdown as HTML, both with and without styling (in case you want to incorporate it in some other location)\n Export from File menu Exporting is now available directly from the File menu in the editor, without having to open the preview.\nExport SVGs Some of Deepdwn\u0026rsquo;s non-standard markdown features are rendered as SVGs, like diagrams, sheet music and guitar tabs (but not math).\nThese SVGs can now be exported directly from the preview window by right-clicking on them and selecting \u0026ldquo;Export as SVG\u0026rdquo; from the context menu, in case you want to use a diagram you\u0026rsquo;ve created somewhere else.\n YAML error display Deepdwn will now highlight and warn you about invalid YAML frontmatter at the beginning of your markdown documents. The error messages themselves need some work to make them more friendly, but for now you\u0026rsquo;ll have an indicator about what\u0026rsquo;s going on.\n Tweaks  Removed automatic codeblock language detection from preview window for performance reasons. Added animation in outline view when switching documents. Increased spacing for active line indicator in high contrast mode. Library updates and patches.  Bug fixes  Fixed occasional and/or brief mermaid graph errors when changing between light and dark modes Fixed background color of save icon in preview window in high contrast mode Fixed unexpected code indentation when completing code blocks in the editor Fixed bug related to cancelling an export in progress Another attempt at fixing incorrect URL in Deepdwn update notifications  "},{id:"changelog-24",href:"https://support.deepdwn.com/changelog/version-0-23-1/",title:"Version 0.23.1",description:"Bugfix: Save as",content:"Quick bugfix release this time\nBugfixes  Fix selecting \u0026ldquo;Save as\u0026rdquo; from the file menu not doing anything. Right-clicking files and selecting \u0026ldquo;Save As\u0026rdquo; in the file list is unaffected by this bug. Removed double confirmation when attempting to save file that will overwrite an existing file.  "},{id:"changelog-25",href:"https://support.deepdwn.com/changelog/version-0-23-0/",title:"Version 0.23.0",description:"RTL support, math, songbooks",content:"Version 23 is a big feature update, and v24 is already under way!\nHere\u0026rsquo;s what\u0026rsquo;s new:\nRight to left support  Deepdwn now has support for right to left script, both while editing and in the preview.\nFirst, there\u0026rsquo;s a new setting under Preferences-\u0026gt;Input, which controls the default writing and display direction for documents.\n Here, you can select Right-to-left, Left-to-right, or Automatic.\nIf you select right-to-left, or left-to-right, that direction will be used for all documents unless overridden per-document.\nYou can also select Automatic, which will detect the first (non-neutral) character in your document, after any frontmatter, and use that to set document direction.\nThis global default setting can be overwritten on any document by adding dir: rtl or dir: ltr attribute to your frontmatter (see screenshot).\nIn right-to-left documents, frontmatter and code blocks will still be displayed left-to-right, as well as diagrams and music in the preview.\nMore music! Adding songbooks  To supplement sheet music and guitar tabs, Deepdwn can now display (and syntax highlight) songbooks (a mix of chords and lyrics), in ChordPro format.\nCurrently, all lyrics require a {section} as shown, but I\u0026rsquo;m planning to remove this requirement in a future update.\nMath  Deepdwn now supports AsciiMath, a markup language for mathematics that meshes really well with Deepdwn\u0026rsquo;s, and markdown\u0026rsquo;s easy to write/easy to read philosophy, and renders nicely.\nLaTeX + chemistry LaTeX is more common than AsciiMath for displaying math on the web and print.\nIt wouldn\u0026rsquo;t normally be included in Deepdwn, because despite it\u0026rsquo;s ubiquity, it does not read as well without rendering. However, AsciiMath depends on a LaTeX implementation for it\u0026rsquo;s rendering, so Deepdwn now also supports KaTeX.\nSupport for chemical equations has also been added, for good measure\nAdded indentation control The last update ensured that indentation was consistant in Deepdwn, and defaulted to spaces. If you prefer tabs, you can now do so by changing the indentation setting in Preferences, as well as the visible tab size / number of spaces.\n Immediate frontmatter updates As part of RTL support, Deepdwn now immediately responds to changes to document frontmatter, instead of waiting until save. This means that changing document title, tags, categories, and direction setting will now update Deepdwn\u0026rsquo;s interface immediately.\nThis gives better feedback when entering frontmatter, and makes more sense in general.\nTweaks  Clicking URLs in the preview window will now open them in a new default browser window. \u0026ldquo;Drafts\u0026rdquo; filter will no longer be activated automatically when selecting a draft document. Heading indicators # now appear in a slightly different color (looks nice). One more of several planned (large) code refactors.  Bugfixes  Fixed checkbox display in generated PDFs. Fixed incorrect \u0026lsquo;hide menu\u0026rsquo; menu state on startup. Fixed separator and sidebar nav border color in high contrast mode. Fixed text selection background color making selected text unreadable in dark mode.  "},{id:"changelog-26",href:"https://support.deepdwn.com/changelog/version-0-22-0/",title:"Version 0.22.0",description:"Preferences revamp, preview fonts, bug fixes",content:"Preferences The preferences UI has gotten a little overhaul\n  The preferences user interface has been split into multiple sections instead of one long list of settings. The automatic names used for the accent colors in the preference panels have been replaced with a subset of the XKCD color survey colors Color and font preset pickers have been replaced with dropdown selectors  Preview font A font selector has been added in preferences for the preview window font.\n All the fonts in the editor are available, as well as the default font \u0026ldquo;Sorts Mill Goudy\u0026rdquo;, and any of your own installed fonts.\nCheck for updates  Deepdwn will now periodically check for updates and alert you when a new version is available. You can disable update checking in preferences.\nStandardize tab vs. space indentation This update fixes inconsistencies with tab and space indentation.\nWhen pressing  Tab :\n if text in one or more lines was selected, or when using the indent line shortcut keys, two spaces would be inserted at beginning of the line if no text was selected, a real tab character was inserted instead  This leads to documents with a mix of tabs and spaces.\nWith 0.22.0, the  Tab  key will now insert a soft tab, either one or two spaces depending on alignment.\nA future update will add a setting for tabs vs spaces, as well as the tab size.\nTweaks  Removed editor panel shadow effect when outline panel is fully collapsed (looks a little cleaner) Internal library and tooling updates Added \u0026ldquo;About\u0026rdquo; window with current version and external links (accessible from the help menu) Animated transitions for \u0026ldquo;About\u0026rdquo; modal, preferences, and automatic update popup.  Bug Fixes  Fix spacing around search field when scrolling down file list Fixed text selection partially covering up text on heading lines Fixed incorrect cursor display in preview mode checkboxes Fixed unexpected checkbox check alignment in preview in some environments Fixed preview mode checkbox styles in high contrast Fixed preview mode code block syntax highlighting colors in dark and highcontrast modes Fixed issue where links could be opened in new application window instead of default browser Fixed mac users being shown non-mac options and keystrokes in preferences Fixed incorrect context menu position when zoomed in or out Fixed statistics colors in high-contrast color scheme Fixed incomplete high-contrast color scheme in distraction free mode Fixed one cause of previews not immediately updating at application launch Removing some unused code and assets Fixed preview window not changing theme if it was already open when new theme selected Fixed some elements showing through close button from behind in preference Fixed some elements showing on top of close button in preferences  "},{id:"changelog-27",href:"https://support.deepdwn.com/changelog/version-0-21-0/",title:"Version 0.21.0",description:"Custom fonts, power mode options, spellcheck languages",content:"Font improvements A couple of features have been added to improve Deepdwn\u0026rsquo;s font handling.\nFira Code Fira Code has been added to Deepdwn\u0026rsquo;s font list. Fira Code distinguishes itself with its ligature support, groups of two or more characters combined to make a single character.\nWhile these are largely intended for programming, they suit markdown editing as well. A full list of ligatures can be found on the Fira Code github page.\n Custom fonts In addition, a \u0026ldquo;Custom font\u0026rdquo; option has been added to application preferences, which will allow you to use an already installed system font of your own in Deepdwn\u0026rsquo;s editor.\n Currently, this requires entering the font by name, but I\u0026rsquo;m hoping replace this with a proper installed font list some time in the future.\nSince Deepdwn doesn\u0026rsquo;t know whether your system font is monospace or variable width, a new option has been added to force mixed-monospace font handling for custom fonts as well. This allows indentation-sensitive markdown, like checklists, to appear correcly while still using your variable width font.\nYou can see the effect of turning this feature on and off in the example text below the option.\nPower mode performance and options Power mode has received some performance improvements, especially noticeable on low-spec machines. While power mode could (and still can) be turned off to improve CPU and GPU usage, it should now be much better behaved, both while active and while idle.\n Additionally, two new sub-settings have been added for power mode, to allow reducing or eliminating the screenshake or particle effects independently, in case you like one, but not the other. Both can also be turned up slightly from their stock positions.\nHeading outdenting When adding a heading via ### in Deepdwn, the # prefix will now be outdented, so that the heading text is aligned with the left margin of the editor. The left margin width has been increased to accommodate this feature.\nBefore \nAfter \nThis helps make headings stand out while editing, and ensures that the most important part of the heading, the text itself, is in a predictable location.\nSpellcheck languages On Windows and Linux, you can now select the language (or multiple languages) used for spellchecking in Deepdwn.\n On Mac systems, the spellcheck language was already handled at the operating system level, so this functionality isn\u0026rsquo;t needed.\nBugfixes  Editor - In sequence diagrams, fixed lines starting with par (like \u0026ldquo;participant\u0026rdquo;) getting incorrect syntax highlighting.  "},{id:"changelog-28",href:"https://support.deepdwn.com/changelog/version-0-20-0/",title:"Version 0.20.0",description:"Image drag and drop, pasting, dark mode for preview",content:"This update brings a couple of long overdue features, alongside some bells and whistles.\nLocal image handling Deepdwn can now display images from your local machine. Both absolute paths, and paths relative to the current document are supported. Setting an image directory via yaml frontmatter may be supported later.\nFor example:\n![A Happy goat!](/home/myname/pictures/goat.jpg) ![A Happy goat!](../goat.jpg) ![A Happy goat!](C:\\Users\\MyName\\Pictures\\goat.jpg) Note that paths with spaces in them are not supported in markdown, so you\u0026rsquo;ll either want to replace these with URL escaped space characters %20, ex:\n![My Image](path/to/my/file%20with%20spaces.jpg) or wrap the whole path in angle brackets\n![My Image](\u0026lt;path/to/my/file with spaces.jpg\u0026gt;) Drag and drop To make working with local images a little easier, Deepdwn now also supports image drag and drop.\n If your current file has been saved at least once, the image will use a relative path from your markdown file to the image.\nIf your file has not been saved, Deepdwn will use the absolute path to your file.\nImage pasting  Deepdwn now also supports pasting PNG and JPG image data directly.\nIf you copy an image, or a section of an image, and paste it into the editor, a new file will be created in the same directory as the file (if your document has been saved). For unsaved markdown documents, the image will be added to your first document directory instead.\nPreview dark mode  The preview window now respects the application dark mode setting, including diagrams and music. When saving a PDF from the preview window, the PDF will still use the light theme as before.\nMinor changes  Increased contrast for guitar tabs and chord diagrams Skip spellchecking for raw urls (links that aren\u0026rsquo;t using the [text](url) syntax) Added a link to the support site to the help menu Changed the default theme for diagrams to a more gray palette. In a future update, these will be themed around the selected accent color. Two new key shortcuts for reverse sorting the selected lines in the default keybindings (  Shift F9  and  Ctrl Shift F9  for case-insensitive). Complete list here: Shortcuts →  Bugfixes  Fix incorrect icon color when hovering over the word \u0026ldquo;Preferences\u0026rdquo; in the preferences button Fix text always being out of alignment for some diagrams The word count displayed below the editor will now show 0 for empty documents, instead of 1 Fixed small horizontal gaps in table separators in preview Fixed crash related to syntax highlighting, in some weird cases, for diagram and music code blocks  "},{id:"changelog-29",href:"https://support.deepdwn.com/changelog/version-0-19-0/",title:"Version 0.19.0",description:"High contrast, emacs, centering, highlighting, list continuation!",content:"List continuation When typing a list, pressing enter/return will now insert a new list item at the same indentation level. This works for check lists as well. If you don\u0026rsquo;t want that item, just press enter again.\n Center and Highlight Paragraphs can now be centered with -\u0026gt;text\u0026lt;-.\nDeepdwn now also supports highlighting text with ==text==.\nThe code for this in the editor and preview is not identical, so you may see some slight differences in behavior between the two for some edge cases.\n High contrast This update also adds a high contrast mode supporting both dark and light application themes. The colors are currently static, but I\u0026rsquo;m hoping to make them configurable in the future. If this feature would be useful to you, please let me know.\n Emacs mode Deepdwn now supports an Emacs mode to complement the existing Vim mode.\nBugfixes  Fix :w in vim mode not saving file Fix application menu being visible in distraction free mode Fix vim text field using wrong text color in dark mode Better preferences button and text alignment Fix the tail end of the yaml frontmatter (---) not using the correct display in mixed monospace mode  "},{id:"changelog-30",href:"https://support.deepdwn.com/changelog/version-0-18-0/",title:"Version 0.18.0",description:"Accessibility improvements",content:"This update brings a number of changes to improve Deepdwn\u0026rsquo;s accessibility, particularly for keyboard-only and screen reader users.\nI need to stress that I\u0026rsquo;m not an accessibility expert, and these changes represent a work in progress for accessibility in Deepdwn. If you have specific suggestions in this area, or something isn\u0026rsquo;t working for you that really ought to be, please reach out and let me know and I will try to fix it.\nGeneral changes The menu is back (For Linux and Windows users)\nThe application menu was auto-hidden in a previous update, but could be made to appear temporarily by pressing the Alt key.\nThis behavior isn\u0026rsquo;t obvious, and hid a number of functions from users that are not otherwise available in the UI, as well as keyboard shortcuts.\nBy default, the menu is now visible for all users. The option to autohide the menu again is available in the preferences panel (and View menu) if you prefer.\nBigger accent color presets On some systems, the preset colors for accent color selection are tiny and awkward.\nThe preset picker has been replaced with a big list instead. You can still select a custom color by clicking the Current Color button in preferences.\n Preferences button If space allows, the word \u0026lsquo;preferences\u0026rsquo; appears next to the preference button (gear) in the lower left of the application, to make it\u0026rsquo;s purpose more obvious.\nKeyboard navigation All interactive elements are now focusable by keyboard-only users using the tab key as normal, and can be activated using the space or enter key. Some elements, like the folder list and panel separators, also make use of the arrow keys (respectively for moving the separator, and for expanding and collapsing the navigation tree).\nPreviously some (most) elements could not be focused correctly with the keyboard. This been fixed application-wide. Tooltips now also appear when focusing elements that have tooltips, instead of only when hovering with the mouse.\nChanging focus from the search field to the editor should retain your current selection or cursor position, instead of scrolling back to the beginning of the document.\nOutlines for the currently focused element have been added everywhere.\nSome additional keyboard have been added for navigation:\n Cmd/CtrlM: Toggle the behavior of the tab key between indentation, versus changing the currently focused element. CtrlShiftM: Move focus to the main editor F6/ShiftF6: Cycle focus through different areas of the application  Screen reader support In addition to the changes to keyboard navigation above, a number of specific changes have been made to support screen readers.\nButtons and interactive elements are all appropriately labeled and described, as are their pressed states and the expanded state of collapsible items that they control.\nLive regions will announce the number of filtered files when filtering by tag, category, folder or the search field.\nLive regions will also announce some changes in application state triggered by keyboard shortcuts:\n Adding a new file (Cmd/CtrlN) Saving the current file (Cmd/CtrlS) Toggling the behavior of the tab key (Cmd/CtrlM) Toggling fullscreen mode (F11) Toggling distraction free mode (ShiftF11)  General Bugfixes  Triggering the context menu via keyboard (context menu button, or ShiftF10) appeared at the mouse location, rather than the element where it was triggered. Fix preview window scrolling unexpectedly after clicking a checkbox in a checklist Removed some hacks used to force immediate spellchecking when first enabling spellcheck Fixed window settings not persisting between launches. Deepdwn should now correctly reappear where you last left it.  "},{id:"changelog-31",href:"https://support.deepdwn.com/changelog/version-0-17-0/",title:"Version 0.17.0",description:"Big feature update + rebranding",content:"The big update I\u0026rsquo;m really excited to launch this update, there\u0026rsquo;s some good stuff in here.\nNew name and branding First, JotDown has been renamed to Deepdwn. There are a couple of reasons for this, but mostly it should be much easier to find by name. (Project downloads may still be called JotDown.zip for a bit)\nThe Itch.io page has been updated with a spiffy new design to help highlight features, and the app has a new icon. I\u0026rsquo;d love feedback on the page as well. If you have questions about Deepdwn that aren\u0026rsquo;t answered on the page, or if anything\u0026rsquo;s confusing, please let me know.\nHere are the new features!\nPreferences Having all of the app settings in the main menu was getting ungainly, since there was no way to provide help text or descriptions for them.\nDeepdwn now has a preferences panel, accessible from the gear icon in the lower left corner of the app. The original menu is still available by pressing Alt (Mac folks' menus are always visible so this part doesn\u0026rsquo;t apply).\n Also there are now tooltips for some items!\nToolbar Several actions now have dedicated buttons in a new toolbar at the top of the application.\nFrom left to right here, those are Help (creates a new markdown example document), distraction-free mode, fullscreen, and show preview window.\n Mixed monospace and variable-width font handling While Deepdwn was designed for monospace fonts (where every character is the same width), variable width fonts can be more comfortable for reading and writing, especially for long, text heavy documents, so serif and sans-serif variable width fonts have been added!\nHowever, for markdown, monospace fonts are pretty important, since much of the formatting is controlled by indentation.\nTo that end, Deepdwn handles these fonts via a new \u0026ldquo;mixed monospace\u0026rdquo; mode. Where it\u0026rsquo;s important, Deepdwn will automatically use the original monospace font to preserve alignment and indentation, and switch back.\n You can find this setting in the new preferences panel.\nAutomatic dark mode When enabled, Deepdown will switch to dark and light mode based on your system\u0026rsquo;s setting. This is most useful if your system is set up to change between dark and light modes on a schedule. This is enabled by default for new installs, but you can select either dark or light mode (in app preferences) if you prefer.\nApplication accent color In addition to dark and light modes, you can now select the primary, app-wide accent color. Select one of the defaults, or choose an exact color to use.\n Drafts everywhere Drafts (new, unsaved files) are now now shown alongside other files in the file list (and sorted to the top), instead of only living in their own separate Drafts filter. This makes a big different for \u0026lsquo;getting lost\u0026rsquo; in the application, since creating a new file selected this filter by default, hiding non-drafts.\nTweaks  Tag, category and headings have animations in some cases now (usually when they\u0026rsquo;re being reordered). Distraction-free mode now has a persistent button for exiting the mode (in addition to the keyboard shortcut, and spamming the escape key). In distraction-free mode, the outline mode panel has a visible (and better aligned) resizing handle The window now appears earlier in the startup process Better performance when dealing with very long documents When creating a new draft, if the new file would not be visible because of search or current, selected filters, those will be cleared so that it\u0026rsquo;s clear a file has been added. Smooth transition in the outline view when changing between documents Save as PDF feels more responsive: Save prompt appears immediately, instead of after PDF creation completed Outline view is more compact Tweaked display for find and replace items in editor Default to compact view in file list (applies to new users) Default application width is wider (applies to new users) Slightly more obvious highlight styles for filter and file lists File and filter list display is more consistent Better alignment and text truncation when resizable panels are very small File \u0026ldquo;unsaved\u0026rdquo; dot marker is bigger and more obvious Security and performance improvements  Bug fixes  Double clicking panels to resize them makes way more sense, works better, and shouldn\u0026rsquo;t get weirdly stuck (especially when there wasn\u0026rsquo;t much free space available). When editing the document, the currently active heading in the outline view would become deselected Fix issue where only the editor area would shake when power mode was enabled Made exiting distraction-free mode (and preferences) via escape key more reliable When right clicking some UI elements, they now stay highlighted while the context menu is open  Next update The next features I\u0026rsquo;m working on focus on accessibility. I\u0026rsquo;m planning full keyboard navigation support in the app, and finer grained controls for power mode (instead of only on/off).\nIf you have suggestions on this topic, or other accessibility accessibility concerns, please let me know.\n"},{id:"changelog-32",href:"https://support.deepdwn.com/changelog/version-0-14-2/",title:"Version 0.14.2",description:"Search for files, compact view, fixes",content:"This update brings a few features to improve usability when managing more files.\nFile list updates The file list now has a search field! This will search all (currently visible, subject to tag/category/folder filtering) files, based on their content or filename.\n The file list now shows the currently selected folder or tag or category in the heading at the top to help make it more obvious that you\u0026rsquo;re looking at a filtered set of files.\nThe file list also sports a new (optional) compact view, selectable from the View menu.\nThe file list is now sorted by name by default, instead of essentially unsorted. I\u0026rsquo;d like to make the sort order selectable in the future.\nThese two features work together to make working on long-form documents, split into multiple files, much easier.\n Bug fixes  Fixed long lines in quote and code blocks not wrapping correctly in the preview window. These are now forcibly wrapped. Fixed Right Click \u0026gt; Open Folder not working in the Filters panel Minor performance improvements for tab processing and rendering. Prevent user from adding a folder that contains or is already contained by another folder that has been added already.  "},{id:"changelog-33",href:"https://support.deepdwn.com/changelog/version-0-13-0/",title:"Version 0.13.0",description:"Ascii guitar tabs, tweaks and features",content:"Ascii Tabs JotDown now supports guitar tabs in the (much more common) ascii tab format. These are properly syntax highlighted in the editor like the other musical formats. An example has been added to the Show Me an Example document.\n Minor features  More mellow and more attractive editor colors in dark mode. When a syntax error causes a chart or ascii tab blocks not to render, a warning icon will appear in the preview window, with more details when you hover over it. Better spacing for the repeat signs in rendered tabs. Tabs now use a monospace font, and no longer vertically center notes that are played together. They are now left aligned to support more complex alignment. Tabs now support a spacing character (-) for custom note alignment. This was needed for ascii tab support, but is useful in the original tab format as well. Added information about JotDown\u0026rsquo;s extension of the jTab format to the Show Me an Example document.  Bug fixes  Fixed current filter status not saving correctly in some circumstances (so that the \u0026ldquo;drafts\u0026rdquo; filter would always be enabled when reopening JotDown for instance).  "},{id:"changelog-34",href:"https://support.deepdwn.com/changelog/version-0-12-0/",title:"Version 0.12.0",description:"New stuff! Search, zoom, more highlighting",content:"This update adds a bunch of stuff!\nFind and Replace This and UI scaling are the two most important features I\u0026rsquo;ve wanted to add. It (hopefully) works the way you\u0026rsquo;d expect.\n UI Scaling / Font Size You can now scale all text and UI together using the View menu, or the Ctrl/Cmd + Mousewheel. I don\u0026rsquo;t have a screenshot for this but you can move your head closer and further from the screenshot above to simulate it.\nNew Charts JotDown now supports two new chart types.\nState Diagram State diagrams are similar to flowcharts, but emphasize changes in state.\n I accidentally excluded this one from the \u0026ldquo;Show Me an Example\u0026rdquo; file, but it\u0026rsquo;s still supported in the current version, and the example will be fixed in the next update.\nFlowchart This is really a beta test for an expanded graph type. Flowchart adds more arrow types and subgraphs, but shares the same syntax with graph. Eventually, both flowchart and graph will share the same features.\n Syntax Highlighting Custom syntax highlighting has been added for all supported chart and music block types. Here are some examples:\n Less Exciting Stuff  Save As will now warn before overwriting an existing file When saving a new file, the \u0026ldquo;.md\u0026rdquo; file extension will be added automatically Fixed an issue where side panels would be locked temporarily for brand new installs Typewriter mode is now disabled as default for new installations Added links to documentation for chart and music block types  "},{id:"changelog-35",href:"https://support.deepdwn.com/changelog/version-0-10-3/",title:"Version 0.10.3",description:"Big feature update! (music formats, save as pdf, other good stuff)",content:" This updated ended up larger than expected, but I\u0026rsquo;m excited for these changes.\nMusic! First is a feature I\u0026rsquo;ve wanted to add since starting: Rendering of sheetmusic and tabs from a (fairly) user friendly format.\nSheetmusic uses the ABC notation format, and is written inside a code block beginning with  ```music or  ```abc.\nGuitar tabs and chords jTab, and are written in code blocks beginning with  ```tab or  ```guitar.\nBoth formats have basic code highlighting in JotDown\u0026rsquo;s editor as well. See the markdown example file in Help \u0026gt; Show me an example for a couple of examples.\nI\u0026rsquo;d like to add support for additional (non-6-string) instruments and tunings at some point, but probably not soon.\nSave as PDF The print button has been removed from the rendered preview display, and replaced with a save button which will save a new PDF for you instead.\nOther Stuff  You can now double click the different panel headings (Filters, Files, Outline) to quickly collapse or expand those sections, instead of having to drag them around. In dark mode, the editor is a little darker, and the text is a little brighter and more differentiated. I\u0026rsquo;m hoping to make this more customizable in the future (instead of just dark/light mode) More comfortable spacing around the editor panel The outline display will now scroll up and down to make sure the current section remains offscreen. Previously, the closest section was always highlighted, but wouldn\u0026rsquo;t always be visible. JotDown has nicer (slightly thinner) scrollbars that blend in better and are less in the way. In distraction-free mode, the outline panel has a more subtle color scheme, and brightens on hover. Spellchecking is now disabled inside graph/diagram, music and tab code blocks. You can now exit distraction free mode by hitting escape twice quickly, in addition to the default shortcut (ShiftF11)  "},{id:"changelog-36",href:"https://support.deepdwn.com/changelog/version-0-10-2/",title:"Version 0.10.2",description:"Visual updates",content:"Version 0.10.2 brings a handful of style updates:\n The main UI font is slightly bolder, larger and more readable (especially the list of files) Titles in the file list are bold, and have alternating background colors, which should make them more readable with many available files File list background and hover behavior better matches the rest of the app Custom scrollbar styles (basic, but less bulky). The resizing area between UI panels is a little smaller, making it easier to manually click/drag the scrollbar when visible.  "},{id:"changelog-37",href:"https://support.deepdwn.com/changelog/version-0-10-0/",title:"Version 0.10.0",description:"Spellcheck Edition",content:" JotDown now supports spellchecking! Finally.\nRight-click misspelled words to see a list of spelling suggestions, or add the word to your dictionary. To remove a word from your dictionary, select it, right-click, and choose \u0026ldquo;Remove from dictionary\u0026rdquo;.\nWith this last critical feature, JotDown is also moving to paid-only license. If you\u0026rsquo;ve already purchased JotDown (for any amount) you\u0026rsquo;ll retain your license and have access to this and future updates.\nIdeally, I\u0026rsquo;d like to have JotDown purchases pay for (expensive) code signing certificates, to get rid of the scary warning when launching (or having to jump through hoops just to run it), but this hasn\u0026rsquo;t happened so far. Maybe some day!\n"},{id:"changelog-38",href:"https://support.deepdwn.com/changelog/",title:"Changelog",description:"Deepdwn Changelog",content:""},{id:"changelog-39",href:"https://support.deepdwn.com/changelog/version-0-9-3/",title:"Version 0.9.3",description:"Small bugfix",content:"Fixed an issue where loading would silently fail when launching Jotdown if any of the previously added folders had been deleted from disk. These will now be ignored instead.\n"},{id:"changelog-40",href:"https://support.deepdwn.com/changelog/version-0-9-2/",title:"Version 0.9.2",description:"Window resizing edition",content:"This release fixes some oddities related to resizing the main window and individual sections. The old behavior was OK, but with the addition of the outline view, resizing app sections was a bit weird.\nOld Resizing  Dragging a divider resizes the two sections on either side. Resizing the window shrinks the editor area to a point, and then starts hiding content.\nNew Behavior  Moving a divider resizes the two sections on either side, but dragging further continues to resize and collapse adjacent sections. Resizing the window shrinks the editor area, then starts collapsing other sections.\n"},{id:"changelog-41",href:"https://support.deepdwn.com/changelog/version-0-9-1/",title:"Version 0.9.1",description:"Added autosave, outline view and scrolling",content:"This release adds autosave (finally), and a document outilne.\nAutosave When enabled, changed files (that have already been saved at least once) will be saved every 2 minutes. When JotDown loses focus, these files will also be saved immediately.\nOutline view A new tab to the left of the document now displays the document outline, based on headings in your markdown document. Headings will be highlighted as you scroll through your document, and can be used to quickly navigate around your file. Particularly useful for longer notes.\nThe addition of the third tab is a little bit awkward to me, and makes resizing and collapsing these sections a bit funky. Hope to improve the UI in this area at some point.\n "},{id:"changelog-42",href:"https://support.deepdwn.com/changelog/version-0-8-2/",title:"Version 0.8.2",description:"Fixed itch app install under Windows",content:"A couple of small fixes:\nThis version of JotDown removes the \u0026lsquo;Delete Folder\u0026rsquo; context menu option. I don\u0026rsquo;t think this is valuable in-app. I may add it back if JotDown detects that the directory is empty, but I think that might be more confusing.\nAdded always-on labels for the filter and files lists on the left side. Previously, these only appeared if the panels were minimized, but should help the interface make more sense before directories and files are added.\nI\u0026rsquo;ve removed the windows portable build from Itch. When run, it extracts its files and assets to a temporary directory, then cleans these up when it\u0026rsquo;s done. If installed with the Itch application, it (correctly) detects this as an installer, and runs it once during installation, and then helpfully deletes the installer, and JotDown will not run until reinstalled.\nThe new windows build is just a directory including the executable and supporting assets. It launches faster, since it doesn\u0026rsquo;t have to extract everything beforehand, and future updates (through the itch app) will be much smaller, since only changed files will be updated.\n"},{id:"changelog-43",href:"https://support.deepdwn.com/changelog/version-0-8-1/",title:"Version 0.8.1",description:"Bugfixes for directory handling",content:"Pushed a small change which prevented the selected directory from loading, and caused JotDown to prompt for a notes directory on every launch.\n"}];userinput?b.add(c):b.add(e),activeSearch.addEventListener('input',debounce(f,150),!0),suggestions.addEventListener('click',g,!0);function f(){var g=this.value,e=b.search(g,5),f=suggestions.childNodes,h=0,i=e.length,c;for(suggestions.classList.remove('d-none'),e.forEach(function(b){c=document.createElement('div'),c.innerHTML='<a href><span></span><span></span></a>',a=c.querySelector('a'),t=c.querySelector('span:first-child'),d=c.querySelector('span:nth-child(2)'),a.href=b.href,t.textContent=b.title,d.textContent=b.description,suggestions.appendChild(c)});f.length>i;)suggestions.removeChild(f[h])}function g(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()